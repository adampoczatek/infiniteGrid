!function(){"use strict";angular.module("infiniteGrid",["infiniteGrid.Templates"])}(),function(){"use strict";var a;a=function(a,b){return{setup:function(a,c){return b.setupDataSetObj(a,c)},getEmptyCells:function(a){var c=[];return b.loopObj(a,function(a,d){b.loopObj(a.columns,function(a,b){var e;a.value||(e={},e[d]=parseFloat(b),c.push(e))})}),c},queryLocalData:function(a,c,d,e,f){var g,h,i,j,k,l,m,n;for(g={cached:{},empty:[]},h=0;e>h;h++)for(j=h+c,i=f[j],g.cached[h]=b.createRowObj(),k=0;d>k;k++)m=k+a,l=i&&i.columns&&i.columns[m],l&&l.value||(l=b.createColumnObj(),n={},n[j]=m,g.empty.push(n)),g.cached[h].columns[k]=l;return g},mergeData:function(a,c){var d,e;return b.loopObj(c,function(c,f){d=a[f],d||(d=a[f]=b.createRowObj()),b.loopObj(c,function(a,c){e=d.columns[c],e||(e=d.columns[c]=b.createColumnObj()),e.value=a.value})}),a}}},angular.module("infiniteGrid").service("dataService",["$http","utilsService",a])}(),function(){"use strict";var a;a=function(){var a,b,c;return c=function(a){return JSON.parse(JSON.stringify(a))},a=function(a,b){var c,d,e;for(e={},c=0,d=a;d>c;c++)e[c]=b;return e},b=function(a,b){var d,e,f;for(d={},e=0,f=a;f>e;e++)d[e]={columns:c(b)};return d},{createRowObj:function(){return{columns:{}}},createColumnObj:function(){return{value:null}},setupDataSetObj:function(c,d){var e,f;return e=a(c,{value:null}),f=b(d,e)},cloneObject:function(a){return c(a)},loopObj:function(a,b){var c;for(c in a)a.hasOwnProperty(c)&&b.call(a,a[c],c)}}},angular.module("infiniteGrid").service("utilsService",[a])}(),function(){"use strict";var a;a=function(a,b,c,d){var e;return e=function(b){var e,f,g;e={},f={},g=function(a,b,c,d){return!a||!b||!c||!d||a>b||c>d?!1:!0},b.initialise=function(){var a;a=g(b.columns,b.totalColumns,b.rows,b.totalRows),a&&(b.data=c.setupDataSetObj(b.columns,b.rows),b.initialised=!0,b.getData(0,0,b.columns,b.rows))},b.getData=function(c,g){var h;f={columnIndex:c,rowIndex:g},h=d.queryLocalData(c,g,b.columns,b.rows,e),b.data=h.cached,h.empty.length&&a.get("/fake-data/data.json").success(function(a){e=d.mergeData(e,a),b.getData(c,g)})},b.showNextRow=function(){b.getData(f.columnIndex,f.rowIndex+1,b.totalColumns)},b.showPrevRow=function(){b.getData(f.columnIndex,f.rowIndex-1,b.totalColumns)},b.showNextColumn=function(){b.getData(f.columnIndex+1,f.rowIndex)},b.showPrevColumn=function(){b.getData(f.columnIndex-1,f.rowIndex)},b.$watchCollection("[totalColumns, totalRows]",function(a,c){a!==c&&b.initialise()}),b.initialise()},{link:e,restrict:"AE",scope:{columns:"=",totalColumns:"=",rows:"=",totalRows:"="},template:b.get("templates/grid.tpl.html")}},angular.module("infiniteGrid").directive("infiniteGrid",["$http","$templateCache","utilsService","dataService",a])}(),function(){"use strict";angular.module("infiniteGrid.Templates",[]).run(["$templateCache",function(a){a.put("templates/grid.tpl.html",'<ul class="infinite-grid">\n    <li class="infinite-grid__row"\n        ng-class="{ \'infinite-grid__row--freeze\': row.freeze }"\n        ng-repeat="row in data">\n\n        <div class="infinite-grid__column"\n             ng-class="{ \'infinite-grid__column--freeze\': column.freeze }"\n             ng-repeat="column in row.columns">\n\n            {{column.value}}\n        </div>\n    </li>\n</ul>\n\n<button ng-click="showPrevRow();">Show prev row</button>\n<button ng-click="showNextRow();">Show next row</button>\n<button ng-click="showPrevColumn();">Show prev column</button>\n<button ng-click="showNextColumn();">Show next column</button>')}])}();